{"version":3,"sources":["component/navigation/Navigation.tsx","component/banner/Banner.tsx","component/nf-original-card/NfOriginalCard.tsx","models/category.model.ts","services/content.service.ts","constants/category.constant.ts","component/content-list/ContentList.tsx","component/category/Category.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Navigation","className","alt","src","Banner","NfOriginalCard","Genre","props","isImagePortrait","content","poster_path","backdrop_path","original_name","contentService","API_KEY","url","params","fetchUrl","this","converObjectToQueryParams","fetch","then","res","json","queryParam","param","CategoryData","ORIGINAL","title","subUrl","TRENDING","extraData","language","TOP_RATED","ACTION","with_generes","COMEDY","HORROR","DOCUMENTRY","ContentList","state","results","total_results","fetchContent","response","console","log","setState","map","key","id","Component","Category","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.11ba6164.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navigation.scss\";\nfunction Navigation() {\n  return (\n    <nav className=\"navigation\">\n      <div className=\"nav-content\">\n        <img\n          alt=\"netflix logo\"\n          className=\"nav-logo\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\"\n        />\n        <img\n          className=\"avatar-logo\"\n          src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n          alt=\"profile avatar\"\n        />\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./Banner.scss\";\nfunction Banner() {\n  return (\n    <header className=\"banner flex align-items-center position-relative\">\n      <div className=\"banner-content flex column\">\n        <h1 className=\"header-title margin-0 padding-bottom-8\">\n          Stranger Things\n        </h1>\n        <div className=\"header-buttons flex\">\n          <button className=\"\">Play</button>\n          <button>My List</button>\n        </div>\n        <h1 className=\"header-content-description\">\n          When a young boy vanishes, a small town uncovers a mystery involving\n          secret experiments, terrifying supernatural forces, and one strange\n          little girl.\n        </h1>\n      </div>\n      <div className=\"fade-bottom position-absolute bottom-0\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\nimport { IContent } from \"../../models/content-list.model\";\nimport \"./NfOriginalCard.scss\";\n\nfunction NfOriginalCard(props: {\n  content: IContent;\n  isImagePortrait: boolean;\n}) {\n  const baseImageUrl = \"https://image.tmdb.org/t/p/original/\";\n  return (\n    <div className=\"nf-original-card\">\n      <div className=\"image-container\">\n        <img\n          className={props.isImagePortrait ? \"portrait\" : \"landscape\"}\n          src={\n            baseImageUrl +\n            (props.isImagePortrait\n              ? props.content.poster_path\n              : props.content.backdrop_path)\n          }\n          alt={props.content.original_name}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default NfOriginalCard;\n","export enum Genre {\n  ORIGINAL = \"original\",\n  TRENDING = \"trending\",\n  TOP_RATED = \"topRated\",\n  ACTION = \"action\",\n  COMEDY = \"comedy\",\n  HORROR = \"horror\",\n  DOCUMENTRY = \"documentary\",\n}\n","import { IContentData } from \"../models/content-list.model\";\n\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n\nexport class ContentService {\n  private API_KEY = \"f81980ff410e46f422d64ddf3a56dddd\";\n  fetchContent(url: string, params?: {}): Promise<IContentData> {\n    const fetchUrl = `${BASE_URL}${url}?api_key=${\n      this.API_KEY\n    }${this.converObjectToQueryParams(params)}`;\n    return fetch(fetchUrl).then((res) => res.json());\n  }\n\n  private converObjectToQueryParams(params: any) {\n    let queryParam = \"\";\n    for (let param in params) {\n      queryParam += `&${param}=${params[param]}`;\n    }\n    return queryParam;\n  }\n}\n\nexport const contentService = new ContentService();\n","import { Genre } from \"../models/category.model\";\n\nexport const CategoryData = {\n  [Genre.ORIGINAL]: {\n    title: \"Netflix Original\",\n    subUrl: \"/discover/tv\",\n  },\n  [Genre.TRENDING]: {\n    title: \"Trending Now\",\n    subUrl: \"/trending/all/week\",\n    extraData: {\n      language: \"en-US\",\n    },\n  },\n  [Genre.TOP_RATED]: {\n    title: \"Top Rated\",\n    subUrl: \"/movie/top_rated\",\n  },\n  [Genre.ACTION]: {\n    title: \"Action Movies\",\n    subUrl: \"/discover/movie\",\n    extraData: {\n      with_generes: 28,\n    },\n  },\n  [Genre.COMEDY]: {\n    title: \"Comedy Movies\",\n    subUrl: \"/discover/movie\",\n    extraData: {\n      with_generes: 35,\n    },\n  },\n  [Genre.HORROR]: {\n    title: \"Horror Movies\",\n    subUrl: \"/discover/movie\",\n    extraData: {\n      with_generes: 27,\n    },\n  },\n  [Genre.DOCUMENTRY]: {\n    title: \"Documentaries\",\n    subUrl: \"/discover/movie\",\n    extraData: {\n      with_generes: 99,\n    },\n  },\n};\n","import React, { Component } from \"react\";\nimport \"./ContentList.scss\";\nimport NfOriginalCard from \"../nf-original-card/NfOriginalCard\";\nimport IContentListProps, {\n  IContentData,\n} from \"../../models/content-list.model\";\nimport { contentService } from \"../../services/content.service\";\nimport { CategoryData } from \"../../constants/category.constant\";\nimport { Genre } from \"../../models/category.model\";\nexport class ContentList extends Component<IContentListProps, IContentData> {\n  constructor(props: IContentListProps) {\n    super(props);\n    this.state = {\n      results: [],\n      total_results: 0,\n    };\n  }\n  componentDidMount() {\n    const onSuccess = (response: IContentData) => {\n      console.log(\"response\", response);\n      this.setState(response);\n    };\n    const onError = () => {\n      console.log(\"error occured while fetch data for \", this.props.url);\n    };\n    contentService\n      .fetchContent(this.props.url, this.props.extraData)\n      .then(onSuccess, onError);\n  }\n  render() {\n    return (\n      <div className=\"content-list\">\n        <h2 className=\"content-title color-white margin-0\">\n          {this.props.title}\n        </h2>\n        <div className=\"content-items flex\">\n          {this.state.results.map((content) => (\n            <NfOriginalCard\n              key={content.id}\n              content={content}\n              isImagePortrait={\n                this.props.title === CategoryData[Genre.ORIGINAL].title\n              }\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContentList;\n","import React, { Component } from \"react\";\nimport ContentList from \"../content-list/ContentList\";\nimport { CategoryData } from \"../../constants/category.constant\";\nimport { Genre } from \"../../models/category.model\";\nexport class Category extends Component {\n  render() {\n    return (\n      <div>\n        <ContentList\n          title={CategoryData[Genre.ORIGINAL].title}\n          url={CategoryData[Genre.ORIGINAL].subUrl}\n        />\n        <ContentList\n          title={CategoryData[Genre.TRENDING].title}\n          url={CategoryData[Genre.TRENDING].subUrl}\n          extraData={CategoryData[Genre.TRENDING].extraData}\n        />\n        <ContentList\n          title={CategoryData[Genre.TOP_RATED].title}\n          url={CategoryData[Genre.TOP_RATED].subUrl}\n        />\n        <ContentList\n          title={CategoryData[Genre.ACTION].title}\n          url={CategoryData[Genre.ACTION].subUrl}\n          extraData={CategoryData[Genre.ACTION].extraData}\n        />\n        <ContentList\n          title={CategoryData[Genre.COMEDY].title}\n          url={CategoryData[Genre.COMEDY].subUrl}\n          extraData={CategoryData[Genre.COMEDY].extraData}\n        />\n        <ContentList\n          title={CategoryData[Genre.HORROR].title}\n          url={CategoryData[Genre.HORROR].subUrl}\n          extraData={CategoryData[Genre.HORROR].extraData}\n        />\n        <ContentList\n          title={CategoryData[Genre.DOCUMENTRY].title}\n          url={CategoryData[Genre.DOCUMENTRY].subUrl}\n          extraData={CategoryData[Genre.DOCUMENTRY].extraData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React from \"react\";\nimport Navigation from \"./component/navigation/Navigation\";\nimport \"./App.scss\";\nimport Banner from \"./component/banner/Banner\";\nimport Category from \"./component/category/Category\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navigation />\n      <Banner />\n      <Category />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}